rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can manage their own user document.
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId
                    && request.resource.data.uid == userId
                    && request.resource.data.email is string
                    && request.resource.data.displayName is string
                    && request.resource.data.photoURL is string
                    && request.resource.data.createdAt == request.time;
      allow update: if request.auth.uid == userId
                    // Ensure uid and createdAt are not changed
                    && request.resource.data.uid == resource.data.uid
                    && request.resource.data.createdAt == resource.data.createdAt;
      allow delete: if false;
    }

    // Users can manage their own tasks.
    match /tasks/{taskId} {
      allow read, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId
                    && request.resource.data.text is string
                    && request.resource.data.completed is bool
                    && request.resource.data.createdAt == request.time;
      allow update: if request.auth.uid == resource.data.userId
                    // Ensure the userId is not changed
                    && request.resource.data.userId == resource.data.userId
                    // Ensure createdAt is not changed
                    && request.resource.data.createdAt == resource.data.createdAt
                    && request.resource.data.text is string
                    && request.resource.data.completed is bool;
    }
    
    // Users can manage their own projects.
    match /projects/{projectId} {
      allow read, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId
                    && request.resource.data.name is string
                    && request.resource.data.description is string
                    && request.resource.data.status in ["Not Started", "In Progress", "On Hold", "Completed"]
                    && request.resource.data.createdAt == request.time;
      allow update: if request.auth.uid == resource.data.userId
                    // Ensure the userId is not changed
                    && request.resource.data.userId == resource.data.userId
                    // Ensure createdAt is not changed
                    && request.resource.data.createdAt == resource.data.createdAt
                    && request.resource.data.name is string
                    && request.resource.data.description is string
                    && request.resource.data.status in ["Not Started", "In Progress", "On Hold", "Completed"];
    }
  }
}
